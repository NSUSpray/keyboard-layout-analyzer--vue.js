@import './base.css';
@import './form.css';
@import './inputs.css';

body {
  margin: 0;
  margin-bottom: var(--header-height);
}

#app {
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  min-height: calc(100vh - var(--header-height));
}

figure {
  display: flex;
  flex-direction: column;
  width: fit-content;
}
figcaption {
  margin: var(--thin-margin);
  font-size: 0.8rem;
  color: var(--dark-gray);
}

hr { border: solid 1px var(--dark-dark-blue); }

img { margin: calc(1rem / 3) var(--margin); }

table {
  border-collapse: collapse;
  text-align: right;
}
tr { color: var(--dark-gray); }
tr:hover { color: black; }
th, td {
  padding: calc(var(--thin-padding) * 0.4);
  border-bottom-style: solid;
}
table.left-first :is(th, td):first-child { text-align: left; }
th {
  color: black;
  border-width: 2px;
  border-color: var(--dark-dark-blue);
}
td {
  border-width: 1px;
  border-color: var(--blue);
}

ul, ol { padding-left: calc(var(--wide-padding) * 1.25); }

.backdrop {
  content: '';
  position: fixed;
  top: 0; left: 0; width: 100%; height: 100%;
  background-color: var(--light-gray);
  opacity: 0.8;
  z-index: -1;
  & + .background-fixer {
    position: absolute;
    top: 0; left: 0; width: 100%; height: 100%;
    background-color: inherit;
    border-radius: inherit;
    z-index: -1;
  }
}

a {
  text-decoration: none;
  color: var(--bright-blue);
  cursor: pointer;
}
a:hover,
a:focus {
  text-decoration: underline;
  color: var(--dark-bright-blue);
}



dialog {

  overflow: visible;
  padding: 0;
  color: var(--black-blue);
  border-style: none;
  z-index: 1 !important;
  &::before /* shadow */ {
    content: '';
    position: absolute;
    top: 0; left: 0; width: 100%; height: 100%;
    border-radius: inherit;
    pointer-events: none;
  }
  /* use custom backdrop instead (see .backdrop)
     to avoid overlapping the shadow */
  &::backdrop { display: none; }

  & > * {
    padding: var(--padding);
    &:is(h1, h2, h3, h4, h5, h6) {
      text-align: center;
      color: white;
      background-color: var(--blue);
    }
    &:first-child:not(.backdrop),
    .backdrop + .background-fixer + & {
      border-top-left-radius: inherit;
      border-top-right-radius: inherit;
    }
    &:last-child {
      border-bottom-left-radius: inherit;
      border-bottom-right-radius: inherit;
    }
  }

}



@media (max-width: 1024px) and (orientation: landscape) {

  body {
    margin: 0;
    margin-left: var(--header-height);
  }
  
  #app { min-height: 100vh; }

}



@media print {

  body { margin: 0; }

  img { max-width: 100% !important; }

  a { font-style: italic; }
  a[href]::after {
    content: ' (' attr(href) ')';
    font-style: normal;
  }
  a[href^='javascript:']::after,
  a[href^='#']::after
      { content: ''; }

  abbr[title]::after { content: ' (' attr(title) ')'; }

}



@media (min-width: 1024px) {

  body {
    margin: 0;
    margin-top: var(--header-height);
    padding: 0;
    background-image: url('./shattered.png');
  }

  h1, h2, h3, h4, h5, h6 { margin: var(--wide-margin) 0; }
  h1, h2, h3 { line-height: 2.8rem; }
  h1 {
    font-size: 3.2rem;
    font-weight: 900;
  }
  h2 { font-size: 2.25rem; }
  h3 { font-size: 1.75rem; }
  h4 { font-size: 1.25rem; }
  h5 { font-size: 1rem; }

}
