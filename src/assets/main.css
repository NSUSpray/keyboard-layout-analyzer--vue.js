@import './base.css';

body {
  margin: 0;
  margin-bottom: var(--header-height);
}

#app {
  display: flex;
  flex-flow: column;
  justify-content: space-between;
  min-height: calc(100vh - var(--header-height));
}

figure {
  display: flex;
  flex-direction: column;
  width: fit-content;
}
figcaption {
  margin: var(--thin-margin);
  font-size: 0.8rem;
  color: var(--dark-gray);
}

button, .btn {
  display: inline-block;
  padding:
    calc(var(--narrow-padding) * 0.8)
    var(--wide-padding);
  border: 0;
  border-radius: var(--radius);
  line-height: 1.4rem;
  font-family: var(--font-family);
  font-size: 1rem;
  color: white;
  background-color: var(--blue);
  cursor: pointer;
  transition: 0.25s;
}
:is(button, .btn):is(:hover, [disabled]) {
  background-color: var(--light-blue);
}
:is(button, .btn).large {
  padding:
    calc(var(--wide-padding) * 0.9)
    calc(var(--wide-padding) * 1.8);
  border-radius: var(--large-radius);
  font-size: 1.25rem;
}
:is(button, .btn).small {
  padding:
    var(--thin-padding)
    calc(var(--narrow-padding) * 1.3);
}
.button-group :is(button, .btn):not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.button-group :is(button, .btn):not(:first-child) {
  border-left: solid 1px var(--light-blue);
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.button-group :is(button, .btn):not(:first-child)[disabled] {
  border-color: var(--light-light-blue);
}
input, textarea {
  transition:
    border linear 0.2s,
    box-shadow linear 0.2s;
}
:is(input, textarea):focus {
  border-color: var(--light-bright-blue);
  box-shadow: var(--bright-glow);
  outline: 0;
}
input, select {
  margin: var(--thin-margin) 0;
  padding: calc(var(--thin-padding) * 0.8) var(--narrow-padding);
  border: 2px solid var(--white-blue);
  border-radius: var(--radius);
  font-family: var(--font-family);
  font-size: 1rem;
  height: 2.2em;
}
select {
  background-color: white;
  cursor: pointer;
}
select:invalid { color: var(--light-light-blue); }
option, optgroup { color: initial; }
optgroup { font-style: normal; }

form {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  margin: var(--wide-margin) 0;
}
fieldset {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  margin: calc(var(--narrow-margin) * 0.75) 0;
  padding: 0;
  border: none;
}
fieldset.row-first:not(:has(label)) {
  margin-left: var(--aside-width);
}
fieldset > label {
  margin: var(--narrow-margin) 0;
  padding-right: var(--narrow-padding);
  text-align: right;
  white-space: nowrap;
/*  min-width: max-content;*/
}
fieldset > label::after { content: ':'; }
fieldset > label.row-last { flex-basis: 100%; }
fieldset.row-first > label {
  width: var(--aside-width); 
  padding-right: var(--wide-padding);
}
fieldset > label.row-last {
  margin: 0;
  padding: 0;
  text-align: left;
}
.controls {
  display: flex;
  flex-wrap: wrap;
}
.controls > :not(:last-child) {
  margin-right: calc(var(--thin-margin) * 2);
}

hr { border: 1px solid var(--dark-dark-blue); }

img { margin: calc(1rem / 3) var(--margin); }

table {
  border-collapse: collapse;
  text-align: right;
}
tr { color: var(--dark-gray); }
tr:hover { color: black; }
th, td {
  padding: calc(var(--thin-padding) * 0.4);
  border-bottom-style: solid;
}
table.left-1st :is(th, td):first-child { text-align: left; }
th {
  border-width: 2px;
  border-color: var(--dark-dark-blue);
  color: black;
}
td {
  border-width: 1px;
  border-color: var(--blue);
}

ul, ol { padding-left: calc(var(--wide-padding) * 1.25); }

a {
  text-decoration: none;
  color: var(--bright-blue);
  cursor: pointer;
}
a:hover, a:focus {
  text-decoration: underline;
  color: var(--dark-bright-blue);
}



@media (max-width: 1024px) and (orientation: landscape) {

  body {
    margin: 0;
    margin-left: var(--header-height);
  }
  
  #app { min-height: 100vh; }

}



@media print {

  body { margin: 0; }

  img { max-width: 100% !important; }

  a { font-style: italic; }
  a[href]::after {
    content: ' (' attr(href) ')';
    font-style: normal;
  }
  a[href^='javascript:']::after,
    a[href^='#']::after { content: ''; }

  abbr[title]::after { content: ' (' attr(title) ')'; }

}



@media (min-width: 1024px) {

  body {
    margin: 0;
    margin-top: var(--header-height);
    padding: 0;
    background-image: url('./shattered.png');
  }

  h1, h2, h3, h4, h5, h6 { margin: var(--wide-margin) 0; }
  h1, h2, h3 { line-height: 2.8rem; }
  h1 {
    font-size: 3.2rem;
    font-weight: 900;
  }
  h2 { font-size: 2.25rem; }
  h3 { font-size: 1.75rem; }
  h4 { font-size: 1.25rem; }
  h5 { font-size: 1rem; }

}
